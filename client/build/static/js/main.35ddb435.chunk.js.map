{"version":3,"sources":["components/TripleBar.jsx","components/PartitionCardGrid.jsx","SharedPartitions.jsx","PrivatePartitions.jsx","components/FairshareTable.jsx","components/FairshareCardGrid.jsx","Fairshare.jsx","components/StorageCardGrid.jsx","Storage.jsx","App.js","serviceWorker.js","index.js"],"names":["Bar","barObject","first","second","third","total","firstPercent","secondPercent","thirdPercent","style","width","borderRadius","overflow","height","display","backgroundColor","opacity","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","PartitionCard","props","classes","partitionObject","nodes","processors","jobs","Card","className","CardContent","Typography","variant","component","name","Divider","marginTop","title","gutterBottom","active","draining","free","running","queued","blocked","PartitionCardGrid","partitionData","Grid","container","map","index","key","item","xs","SharedPartitions","React","useState","sharedPartitionData","setSharedPartitionData","useEffect","axios","get","process","then","userSharedPartitionData","data","catch","error","console","log","PrivatePartitions","privatePartitionData","setPrivatePartitionData","userPrivatePartitionData","table","minWidth","maxHeight","FairshareTable","fairshareTableData","totalUsage","reduce","currentValue","usage","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","user","scope","Math","round","FairshareCard","fairshareObject","showTable","setShowTable","toggleTable","fairshare","CardActions","Button","size","onClick","FairshareCardGrid","fairshareData","Fairshare","setFairshareData","userFairshareData","StorageCard","storageObject","block","file","path","limit","StorageCardGrid","storageData","Storage","setStorageData","userStorageData","appBar","marginLeft","drawer","flexShrink","drawerPaper","toolbar","mixins","content","background","default","info","light","PermanentDrawerLeft","drawerElements","label","icon","to","CssBaseline","AppBar","position","Toolbar","noWrap","Drawer","anchor","List","drawerObject","ListItem","button","exact","NavLink","activeClassName","ListItemIcon","ListItemText","primary","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.35ddb435.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Bar = ({ barObject }) => {\n  const { first, second, third } = barObject;\n\n  const total = first + second + third;\n\n  const firstPercent = 100 * first / total + \"%\";\n  const secondPercent = 100 * second / total + \"%\";\n  const thirdPercent = 100 * third / total + \"%\";\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        borderRadius: \"25px\",\n        overflow: \"hidden\",\n        height: \"15px\",\n        /* margin: \"20px 0 20px 0\", */\n      }}\n    >\n      <div\n        style={{\n          display: \"inline-block\",\n          backgroundColor: \"#1976D2\",\n          height: \"100%\",\n          width: firstPercent,\n        }}\n      ></div>\n\n      <div\n        style={{\n          display: \"inline-block\",\n          backgroundColor: \"#2196F3\",\n          height: \"100%\",\n          width: secondPercent,\n        }}\n      ></div>\n      <div\n        style={{\n          display: \"inline-block\",\n          backgroundColor: \"#2196F3\",\n          opacity: \"50%\",\n          height: \"100%\",\n          width: thirdPercent,\n        }}\n      ></div>\n    </div>\n  );\n};\nexport default Bar;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Bar from \"./TripleBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst PartitionCard = (props) => {\n  const { classes, partitionObject } = props;\n\n  const { nodes, processors, jobs } = partitionObject;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {partitionObject.name}\n        </Typography>\n        <Divider\n          style={{\n            marginTop: \"3px\",\n          }}\n        />\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`${nodes.active} of ${nodes.active + nodes.draining + nodes.free} Nodes Active (${nodes.draining} Draining. ${nodes.free} Free)`}\n          </Typography>\n          <Bar barObject={{\n            first: nodes.active,\n            second: nodes.draining,\n            third: nodes.free\n          }} />\n        </div>\n\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`${processors.active} of ${processors.total} Processors Active (${processors.draining} Draining. ${processors.free} Free)`}\n          </Typography>\n          <Bar barObject={{\n            first: processors.active,\n            second: processors.draining,\n            third: processors.free\n          }} />\n        </div>\n\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`${jobs.running} of ${jobs.running + jobs.queued + jobs.blocked} Jobs Active (${jobs.queued} Queued. ${jobs.blocked} Blocked)`}\n          </Typography>\n          <Bar barObject={{\n            first: jobs.running,\n            second: jobs.queued,\n            third: jobs.blocked\n          }} />\n        </div>\n      </CardContent>\n      {/* <CardActions> */}\n      {/*   <Button color=\"primary\" size=\"small\"> */}\n      {/*     Learn More */}\n      {/*   </Button> */}\n      {/* </CardActions> */}\n    </Card>\n  );\n};\n\nconst PartitionCardGrid = (props) => {\n  const { partitionData } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {partitionData.map((partitionObject, index) => (\n          <Grid key={partitionObject.name} item xs={6}>\n            <PartitionCard\n              classes={classes}\n              partitionObject={partitionObject}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default PartitionCardGrid;\n","import React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport PartitionCardGrid from \"./components/PartitionCardGrid\";\n\nconst SharedPartitions = (props) => {\n  const [sharedPartitionData, setSharedPartitionData] = React.useState([]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_BASENAME + \"/api/sharedPartitionData\")\n      .then((userSharedPartitionData) => {\n        setSharedPartitionData(userSharedPartitionData.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return <PartitionCardGrid partitionData={sharedPartitionData} />;\n};\n\nexport default SharedPartitions;\n\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport PartitionCardGrid from \"./components/PartitionCardGrid\";\n\nconst PrivatePartitions = (props) => {\n  const [privatePartitionData, setPrivatePartitionData] = React.useState([]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_BASENAME + \"/api/privatePartitionData\")\n      .then((userPrivatePartitionData) => {\n        setPrivatePartitionData(userPrivatePartitionData.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return <PartitionCardGrid partitionData={privatePartitionData} />;\n};\n\nexport default PrivatePartitions;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: \"100%\",\n  },\n  container: {\n    maxHeight: 400,\n    marginTop: \"20px\"\n  }\n});\n\nconst FairshareTable = (props) => {\n  const classes = useStyles();\n  const { fairshareTableData } = props;\n\n  const totalUsage = fairshareTableData.reduce((total, currentValue) => {\n    return total + currentValue.usage;\n  }, 0);\n\n  return (\n    <TableContainer component={Paper} variant=\"outlined\" className={classes.container} >\n      <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>User</TableCell>\n            <TableCell align=\"right\">Usage</TableCell>\n            <TableCell align=\"right\">Percent Usage</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {fairshareTableData.map((row, index) => (\n            <TableRow key={row.user}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.user}\n              </TableCell>\n              <TableCell align=\"right\">{row.usage}</TableCell>\n              <TableCell align=\"right\">{Math.round(100 * row.usage / totalUsage) + \"%\"}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\n\nexport default FairshareTable\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Bar from \"./TripleBar\";\nimport FairshareTable from \"./FairshareTable\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst FairshareCard = (props) => {\n  const { classes, fairshareObject } = props;\n\n  const [showTable, setShowTable] = React.useState(false);\n\n  const toggleTable = () => {\n    setShowTable(!showTable);\n  };\n\n  const { fairshareTableData } = fairshareObject;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {fairshareObject.name}\n        </Typography>\n        <Divider\n          style={{\n            marginTop: \"3px\",\n          }}\n        />\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`Fairshare of ${fairshareObject.fairshare}`}\n          </Typography>\n          <Bar\n            barObject={{\n              first: fairshareObject.fairshare,\n              second: 1 - fairshareObject.fairshare,\n              third: 0,\n            }}\n          />\n        </div>\n\n        {showTable ? (\n          <FairshareTable fairshareTableData={fairshareTableData} />\n        ) : null}\n      </CardContent>\n      <CardActions>\n        {showTable ? (\n          <Button color=\"primary\" size=\"small\" onClick={() => toggleTable()}>\n            Hide Fairshare Usage Breakdown\n          </Button>\n        ) : (\n          <Button color=\"primary\" size=\"small\" onClick={() => toggleTable()}>\n            Show Fairshare Usage Breakdown\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nconst FairshareCardGrid = (props) => {\n  const { fairshareData } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {fairshareData.map((fairshareObject, index) => (\n          <Grid item xs={6} key={fairshareObject.name} >\n            <FairshareCard\n              classes={classes}\n              fairshareObject={fairshareObject}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default FairshareCardGrid;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport FairshareCardGrid from \"./components/FairshareCardGrid\";\n\nconst Fairshare = (props) => {\n  const [fairshareData, setFairshareData] = React.useState([]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_BASENAME + \"/api/fairshareData\")\n      .then((userFairshareData) => {\n        setFairshareData(userFairshareData.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  return <FairshareCardGrid fairshareData={fairshareData} />;\n};\n\nexport default Fairshare;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Divider from \"@material-ui/core/Divider\";\nimport Bar from \"./TripleBar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst StorageCard = (props) => {\n  const { classes, storageObject } = props;\n\n  const { block, file } = storageObject;\n\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"h2\">\n          {storageObject.name}\n        </Typography>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Path: {storageObject.path}\n        </Typography>\n\n        <Divider\n          style={{\n            marginTop: \"3px\",\n          }}\n        />\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`Using ${block.usage} out of ${block.limit} available`}\n          </Typography>\n          <Bar\n            barObject={{\n              first: block.usage,\n              second: block.limit - block.usage,\n              third: 0,\n            }}\n          />\n        </div>\n\n        <div\n          style={{\n            marginTop: \"20px\",\n          }}\n        >\n          <Typography\n            className={classes.title}\n            color=\"textSecondary\"\n            gutterBottom\n          >\n            {`Using ${file.usage} out of ${file.limit} files available`}\n          </Typography>\n          <Bar\n            barObject={{\n              first: file.usage,\n              second: file.limit - file.usage,\n              third: 0,\n            }}\n          />\n        </div>\n      </CardContent>\n      {/* <CardActions> */}\n      {/*   <Button color=\"primary\" size=\"small\"> */}\n      {/*     Learn More */}\n      {/*   </Button> */}\n      {/* </CardActions> */}\n    </Card>\n  );\n};\n\nconst StorageCardGrid = (props) => {\n  const { storageData } = props;\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        {storageData.map((storageObject, index) => (\n          <Grid item xs={6} key={storageObject.name} >\n            <StorageCard classes={classes} storageObject={storageObject} />\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nexport default StorageCardGrid;\n","import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport StorageCardGrid from \"./components/StorageCardGrid\";\n\nconst Storage = (props) => {\n  const [storageData, setStorageData] = React.useState([]);\n\n  useEffect(() => {\n    axios\n      .get(process.env.REACT_APP_BASENAME + \"/api/storageData\")\n      .then((userStorageData) => {\n        setStorageData(userStorageData.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  // axios\n  //   .get(\"/pun/dev/hpc_2/api/user\")\n  //   .then((user) =>\n  //     axios.get(\"/pun/dev/hpc_2/api/storageData\").then((storageData) => {\n  //       const userStorageData = storageData.data.filter(\n  //         (storageObject) =>\n  //         storageObject.users.indexOf(user.data.username) !== -1\n  //       );\n  //       setStorageData(userStorageData);\n  //     })\n  //   )\n\n  return <StorageCardGrid storageData={storageData} />;\n};\n\nexport default Storage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { NavLink } from 'react-router-dom';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport DnsIcon from '@material-ui/icons/Dns';\nimport GroupIcon from '@material-ui/icons/Group';\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance';\nimport StorageIcon from '@material-ui/icons/Storage';\n\n// import Hello from \"./Hello.js\";\n// import PartitionCardGrid from \"./components/PartitionCardGrid\";\nimport SharedPartitions from \"./SharedPartitions\";\nimport PrivatePartitions from \"./PrivatePartitions\";\nimport Fairshare from \"./Fairshare\";\nimport Storage from \"./Storage\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  active: {\n    backgroundColor: theme.palette.info.light\n  }\n}));\n\nexport default function PermanentDrawerLeft() {\n  const classes = useStyles();\n\n  const drawerElements = [\n    {\n      label: \"Shared Partitions\",\n      icon: <DnsIcon/>,\n      to: \"shared-partitions\"\n    },\n    {\n      label: \"Private Partitions\",\n      icon: <GroupIcon/>,\n      to: \"private-partitions\"\n    },\n    {\n      label: \"Fairshare\",\n      icon: <AccountBalanceIcon/>,\n      to: 'fairshare'\n    },\n    {\n      label: \"Storage\",\n      icon: <StorageIcon/>,\n      to: \"storage\"\n    }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position=\"fixed\" className={classes.appBar}>\n        <Toolbar>\n          <Typography variant=\"h6\" noWrap>\n            System Status App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        anchor=\"left\"\n      >\n        <div className={classes.toolbar} />\n        <Divider />\n        <List>\n          {drawerElements.map((drawerObject, index) => (\n            <ListItem button exact component={NavLink} to={drawerObject.to} activeClassName={classes.active} key={drawerObject.label}>\n              {/* <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon> */}\n              <ListItemIcon>{drawerObject.icon}</ListItemIcon>\n              <ListItemText primary={drawerObject.label} />\n            </ListItem>\n          ))}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <Switch>\n          <Route exact path=\"/\" component={() => <Redirect to=\"/shared-partitions\"/>}/>\n          <Route exact path=\"/shared-partitions\" component={SharedPartitions} />\n          <Route exact path=\"/private-partitions\" component={PrivatePartitions} />\n          <Route exact path=\"/fairshare\" component={Fairshare} />\n          <Route exact path=\"/storage\" component={Storage} />\n        </Switch>\n\n      </main>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/pun/dev/hpc_2\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}